{"version":3,"sources":["components/Search.js","components/AddAppointment.js","components/AppointmentInfo.js","App.js","index.js"],"names":["DropDown","toggle","sortBy","onSortByChange","orderBy","onOrderByChange","className","role","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","event","target","placeholder","mySort","myOrder","AddAppointment","onSendAppoitment","lastId","clearData","patientName","aptDate","aptTime","aptNotes","toggleForm","setToggleForm","formData","setFormData","rows","appointmentInfo","AppointmentInfo","appointment","onDeleteAppointment","App","appointmentList","setAppointmentList","setQuery","setSortBy","setOrderBy","filteredAppointments","filter","item","toLowerCase","includes","sort","a","b","order","fetchData","useCallback","fetch","then","response","json","data","useEffect","myAppointment","reduce","max","Number","myQuery","map","appointmentId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe68cb12.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from \"react-icons/bi\"\nimport { useState } from 'react';\n\nconst DropDown = ({ toggle, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\n  if (!toggle) {\n    return null;\n  }\n  return (\n    <div className=\"origin-top-right absolute right-0 mt-2 w-56\n      rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\n      <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n        <div onClick={() => onSortByChange('patientName')}\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n          role=\"menuitem\">Patient Name {(sortBy === 'patientName') && <BiCheck />}\n        </div>\n        <div onClick={() => onSortByChange('aptDate')}\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n          role=\"menuitem\">Date {(sortBy === 'aptDate') && <BiCheck />}\n        </div>\n        <div onClick={() => onOrderByChange('asc')}\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\n          role=\"menuitem\">Asc {(orderBy === 'asc') && <BiCheck />}\n        </div>\n        <div onClick={() => onOrderByChange('desc')}\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n          role=\"menuitem\">Desc {(orderBy === 'desc') && <BiCheck />}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Search = ({ query, onQueryChange, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\n  let [toggleSort, setToggleSort] = useState(false);\n  return (\n    <div className=\"py-5\">\n      <div className=\"mt-1 relative rounded-md shadow-sm\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <BiSearch />\n          <label htmlFor=\"query\" className=\"sr-only\" />\n        </div>\n        <input type=\"text\" name=\"query\" id=\"query\" value={query}\n          onChange={(event) => { onQueryChange(event.target.value) }}\n          className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\n        <div className=\"absolute inset-y-0 right-0 flex items-center\">\n          <div>\n            <button type=\"button\" onClick={() => { setToggleSort(!toggleSort) }}\n              className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\n              Sort By <BiCaretDown className=\"ml-2\" />\n            </button>\n            <DropDown toggle={toggleSort}\n              sortBy={sortBy}\n              onSortByChange={mySort => onSortByChange(mySort)}\n              orderBy={orderBy}\n              onOrderByChange={myOrder => onOrderByChange(myOrder)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Search","import { BiCalendarPlus } from \"react-icons/bi\";\nimport { useState } from \"react\";\n\nconst AddAppointment = ({ onSendAppoitment, lastId }) => {\n  const clearData = {\n    patientName: '',\n    aptDate: '',\n    aptTime: '',\n    aptNotes: ''\n  }\n\n  let [toggleForm, setToggleForm] = useState(false)\n  let [formData, setFormData] = useState(clearData)\n\n  function formDataPublish() {\n    const appointmentInfo = {\n      id: lastId + 1,\n      patientName: formData.patientName,\n      aptDate: formData.aptDate + ' ' + formData.aptTime,\n      aptNotes: formData.aptNotes\n    }\n    onSendAppoitment(appointmentInfo);\n    setFormData(clearData);\n    setToggleForm(!toggleForm)\n  }\n\n    return (\n    <div>\n      <button onClick={() => { setToggleForm(!toggleForm) }}\n      className={`bg-blue-400 text-white px-2 py-3 w-full text-left rounded-t-md ${toggleForm ? 'rounded-t-md' : 'rounded-md'}`} >\n        <div><BiCalendarPlus className=\"inline-block align-text-top\" />  Add Appointment</div>\n      </button>\n      {\n        toggleForm &&\n        <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\n        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n          <label htmlFor=\"patientName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n            Patient Name\n          </label>\n          <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n            <input type=\"text\" name=\"patientName\" id=\"patientName\"\n              className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" \n              onChange={(event) => {setFormData({ ...formData, patientName: event.target.value })}}\n              value={formData.patientName}\n              />\n              \n          </div>\n        </div>\n\n        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n          <label htmlFor=\"aptDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n            Apt Date\n          </label>\n          <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n            <input type=\"date\" name=\"aptDate\" id=\"aptDate\"\n              className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" \n              onChange={(event) => {setFormData({ ...formData, aptDate: event.target.value })}}\n              value={formData.aptDate}\n              />\n          </div>\n        </div>\n\n        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n          <label htmlFor=\"aptTime\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n            Apt Time\n          </label>\n          <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n            <input type=\"time\" name=\"aptTime\" id=\"aptTime\"\n              className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" \n              onChange={(event) => {setFormData({ ...formData, aptTime: event.target.value })}}\n              value={formData.aptTime}\n              />\n          </div>\n        </div>\n\n        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n          <label htmlFor=\"aptNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n            Appointment Notes\n          </label>\n          <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n            <textarea id=\"aptNotes\" name=\"aptNotes\" rows=\"3\"\n              className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Detailed comments about the condition\"\n              onChange={(event) => {setFormData({ ...formData, aptNotes: event.target.value })}}\n              value={formData.aptNotes}\n              ></textarea>\n              \n          </div>\n        </div>\n\n\n        <div className=\"pt-5\">\n          <div className=\"flex justify-end\">\n            <button type=\"submit\" onClick={formDataPublish} className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n      }      \n    </div>\n    )\n}\n\nexport default AddAppointment;","import { BiTrash } from \"react-icons/bi\"\n\nconst AppointmentInfo = ({ appointment, onDeleteAppointment }) => {\n    return (\n        <li className=\"px-3 py-3 flex items-start\">\n              <button onClick={ () => onDeleteAppointment(appointment.id)} type=\"button\"\n                className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n                <BiTrash /></button>\n              <div className=\"flex-grow\">\n                <div className=\"flex items-center\">\n                  <span className=\"flex-grow text-right\">{appointment.aptDate}</span>\n                </div>\n                <div><b className=\"font-bold text-blue-500\">Patient:</b> {appointment.patientName}</div>\n                <div className=\"leading-tight\">{appointment.aptNotes}</div>\n              </div>\n            </li>\n    )\n}\n\nexport default AppointmentInfo;","import { useState, useEffect, useCallback } from 'react'\nimport { BiCalendar } from \"react-icons/bi\"\nimport Search from \"./components/Search\" \nimport AddAppointment from \"./components/AddAppointment\"\nimport AppointmentInfo from \"./components/AppointmentInfo\"\n\nfunction App() {\n  let[appointmentList, setAppointmentList] = useState([]);\n  let [query, setQuery] = useState(\"\");\n  let [sortBy, setSortBy] = useState(\"patientName\");\n  let [orderBy, setOrderBy] = useState(\"asc\");\n\n  const filteredAppointments = appointmentList.filter(\n    item => {\n      return (\n        item.patientName.toLowerCase().includes(query.toLowerCase()) ||\n        item.aptNotes.toLowerCase().includes(query.toLowerCase())\n      )\n    }\n  ).sort((a,b) => {\n    let order = (orderBy === 'asc') ? 1 : -1;\n    return (\n      a[sortBy].toLowerCase() < b[sortBy].toLowerCase() \n      ? -1 * order : 1 * order\n    )\n  })\n\n  const fetchData = useCallback(() => {\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(data => {\n        setAppointmentList(data)\n      });\n  }, [])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData]);\n\n  return (\n    <div className=\"App container mx-auto mt-3 font-thin\">\n      <h1 className=\"text-5xl mb-3\">\n        <BiCalendar className=\"inline-block text-red-400 align top\"/>Your Appointments</h1>\n        <AddAppointment \n          onSendAppoitment={myAppointment => setAppointmentList([...appointmentList, myAppointment])}\n          lastId={appointmentList.reduce((max, item) => Number(item.id) > max ? Number(item.id) : max, 0)}\n        />\n        <Search query={query}\n        onQueryChange={myQuery => setQuery(myQuery)} \n        orderBy={orderBy}\n        onOrderByChange={mySort => setOrderBy(mySort)}\n        sortBy={sortBy}\n        onSortByChange={mySort => setSortBy(mySort)}\n        />\n\n        <ul className=\"divide-y divide-gray-200\">\n          {filteredAppointments.map(appointment => (\n              <AppointmentInfo key={appointment.id}\n              appointment={appointment}\n              onDeleteAppointment = {\n                appointmentId => \n                  setAppointmentList(appointmentList.filter(appointment => appointment.id !== appointmentId))\n              }\n              />\n            ))\n          }          \n        </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}